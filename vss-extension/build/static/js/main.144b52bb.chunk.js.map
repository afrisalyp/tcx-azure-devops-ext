{"version":3,"sources":["services/axiosWithAuth.js","services/challenges.js","utils/date-utils.js","components/challenges-table.js","utils/url-utils.js","components/challenges-tab.js","services/projects.js","components/projects-table.js","components/main-tab.js","Widget.js","App.js","serviceWorker.js","index.js"],"names":["getToken","Promise","resolve","VSS","getService","ServiceIds","ExtensionData","then","dataService","getValue","scopeType","value","token","offsetSeconds","d","getTokenExpirationDate","valueOf","Date","isTokenExpired","alert","decodeToken","parts","split","length","Error","decoded","str","output","replace","decodeURIComponent","escape","atob","urlBase64Decode","JSON","parse","exp","setUTCSeconds","axiosInstance","axios","create","headers","timeout","interceptors","request","use","config","catch","err","console","error","DEV_API_HOSTNAME","CHALLENGE_API_URL","formatDate","dateStr","toLocaleDateString","descendingComparator","a","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","order","onRequestSort","TableHead","TableRow","map","headCell","TableCell","key","align","padding","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","name","type","border","clip","height","margin","overflow","position","top","ChallengeTable","status","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","data","setData","filters","sortBy","sortOrder","useEffect","params","query","get","qs","stringify","encode","fetchChallenges","perPage","res","log","e","Paper","TableContainer","Table","aria-labelledby","size","aria-label","numSelected","rowCount","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","labelId","hover","selectedIndex","indexOf","newSelected","concat","handleClick","tabIndex","component","scope","href","target","startDate","endDate","currentPhaseNames","join","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","TabPanel","children","other","role","hidden","Box","p","Typography","a11yProps","flexGrow","backgroundColor","palette","background","ChallengesTabs","setValue","AppBar","Tabs","onChange","newValue","Tab","PROJECT_API_URL","queryString","response","_","ProjectsTable","fetchMemberProjects","projects","lastActivityAt","directProjectId","display","tabs","borderRight","divider","tokenTextEdit","VerticalTabs","setToken","orientation","variant","TextField","Button","color","this","bind","Widget","App","URLSearchParams","window","location","search","context","Boolean","hostname","match","init","explicitNotifyLoaded","require","WidgetHelpers","register","load","widgetSettings","WidgetStatusHelper","Success","menuContributionHandler","execute","actionContext","notifyLoadSucceeded","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.144b52bb.chunk.js","sourcesContent":["import axios from 'axios'\n\n/**\n * Create an axios instance that can make authenticated requests\n */\n\nexport const getToken = () => {\n  return new Promise((resolve) => {\n    VSS.getService(VSS.ServiceIds.ExtensionData).then(function(dataService) { // eslint-disable-line no-undef\n      // Get value in user scope\n      dataService.getValue(\"token\", {scopeType: \"User\"}).then(function(value) {\n        if (isTokenExpired(value)) {\n          alert('Token is expired. Please provide new token.')\n        }\n        return resolve(value)\n      });\n    });\n  })\n}\n\nfunction urlBase64Decode(str) {\n  let output = str.replace(/-/g, '+').replace(/_/g, '/')\n\n  switch (output.length % 4) {\n    case 0:\n      break \n\n    case 2:\n      output += '=='\n      break\n\n    case 3:\n      output += '='\n      break\n\n    default:\n      throw 'Illegal base64url string!'\n  }\n  return decodeURIComponent(escape(atob(output))) //polyfill https://github.com/davidchambers/Base64.js\n}\n\nexport function decodeToken(token) {\n  const parts = token.split('.')\n\n  if (parts.length !== 3) {\n    throw new Error('The token is invalid')\n  }\n\n  const decoded = urlBase64Decode(parts[1])\n\n  if (!decoded) {\n    throw new Error('Cannot decode the token')\n  }\n\n  return JSON.parse(decoded)\n}\n\nfunction getTokenExpirationDate(token) {\n  const decoded = decodeToken(token)\n\n  if(typeof decoded.exp === 'undefined') {\n    return null\n  }\n\n  const d = new Date(0) // The 0 here is the key, which sets the date to the epoch\n  d.setUTCSeconds(decoded.exp)\n\n  return d\n}\n\nfunction isTokenExpired(token, offsetSeconds = 0) {\n  const d = getTokenExpirationDate(token)\n\n  if (d === null) {\n    return false\n  }\n\n  // Token expired?\n  return !(d.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)))\n}\n\nexport const axiosInstance = axios.create({\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 20000\n})\n\n// request interceptor to pass auth token\naxiosInstance.interceptors.request.use(config => {\n  return getToken()\n    .then(token => {\n      config.headers['Authorization'] = `Bearer ${token}`\n      return config\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n})\n","import qs from 'qs'\nimport { axiosInstance } from './axiosWithAuth'\n\nconst DOMAIN = 'topcoder-dev.com'\nconst DEV_API_HOSTNAME = `https://api.${DOMAIN}`\nconst CHALLENGE_API_URL = `${DEV_API_HOSTNAME}/v5/challenges`\n\n/**\n * Fetch challenges from v5 API\n * @param filters\n * @param params\n */\nexport function fetchChallenges (filters, params) {\n  const query = {\n    ...filters,\n    ...params\n  }\n  return axiosInstance.get(`${CHALLENGE_API_URL}?${qs.stringify(query, { encode: false })}`)\n}","\n/**\n * Convert ISO date string to readable standard date string based on locale.\n * @param dateStr\n * @return string\n */\nfunction formatDate(dateStr) {\n  let date = new Date(dateStr);\n  return date.toLocaleDateString()\n}\n\nexport { formatDate };","/**\n * Create view for showing the challenge list on hub and widget.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { fetchChallenges } from '../services/challenges'\nimport { challengeUrl } from '../utils/url-utils'\nimport { formatDate } from '../utils/date-utils'\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\n  { id: 'name', numeric: false, disablePadding: false, label: 'Title' },\n  { id: 'startDate', numeric: false, disablePadding: false, label: 'Start Date' },\n  { id: 'endDate', numeric: false, disablePadding: false, label: 'End Date' },\n  { id: 'state', numeric: false, disablePadding: false, label: 'State' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  name: {\n    width: 300\n  },\n  type: {\n    width: 100\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nfunction ChallengeTable(props) {\n  const { status } = props;\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [data, setData] = React.useState([]);\n\n  const filters = {\n    sortBy: 'updated',\n    sortOrder: 'desc'\n  }\n  // if (!_.isEmpty(filterChallengeName)) {\n  //   filters['name'] = filterChallengeName\n  // }\n  // if (_.isInteger(projectId) && projectId > 0) {\n  //   filters['projectId'] = projectId\n  // }\n  // if (!_.isEmpty(status)) {\n  //   filters['status'] = status === '' ? undefined : _.startCase(status.toLowerCase())\n  // } else if (!(_.isInteger(projectId) && projectId > 0)) {\n    filters['status'] = status\n  // }\n\n  React.useEffect(() => {\n    fetchChallenges(filters, {\n      page: 1,\n      perPage: 50\n    }).then((res) => {\n      setData(res.data)\n      console.log(JSON.stringify(res.data));\n    }).catch((e) => {\n      console.error(e)\n    })\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size='medium'\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={data.length}\n            />\n            <TableBody>\n              {stableSort(data, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                  <TableRow // eslint-disable-line react/jsx-key\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      tabIndex={-1}\n                    >\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" className={classes.type}>{row.type}</TableCell>\n                      <TableCell align=\"left\" className={classes.name}>\n                        <a href={challengeUrl(row.id)} target=\"_blank\">{row.name}</a> {/* eslint-disable-line react/jsx-no-target-blank */}\n                      </TableCell>\n                      <TableCell align=\"left\">{formatDate(row.startDate)}</TableCell>\n                      <TableCell align=\"left\">{formatDate(row.endDate)}</TableCell>\n                      <TableCell align=\"left\">{row.currentPhaseNames.join(', ')}</TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nChallengeTable.propTypes = {\n  status: PropTypes.string.isRequired\n};\n\nexport default ChallengeTable;","/**\n * Generate direct url for given direct project id\n * @param directProjectId\n * @return string\n */\nfunction directUrl(directProjectId) {\n  return `https://www.topcoder-dev.com/direct/projectOverview.action?formData.projectId=${directProjectId}`;\n}\n\n/**\n * Generate connect url for givenproject id\n * @param id\n * @return string\n */\nfunction connectUrl(id) {\n  return `https://connect.topcoder-dev.com/projects/${id}`;\n}\n\n/**\n * Generate challenge url for given challenge id\n * @param id\n * @return string\n */\nfunction challengeUrl(id) {\n  return `https://www.topcoder-dev.com/challenges/${id}`;\n}\n\nexport { directUrl, connectUrl, challengeUrl };","/**\n * Create view for showing the challenge options, active, new, draft, completed.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ChallengesTable from './challenges-table';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ChallengesTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Active\" {...a11yProps(0)} />\n          <Tab label=\"New\" {...a11yProps(1)} />\n          <Tab label=\"Draft\" {...a11yProps(2)} />\n          <Tab label=\"Completed\" {...a11yProps(3)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <ChallengesTable status=\"Active\"/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <ChallengesTable status=\"New\"/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <ChallengesTable status=\"Draft\"/>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <ChallengesTable status=\"Completed\"/>\n      </TabPanel>\n    </div>\n  );\n}\n","import _ from 'lodash'\nimport { axiosInstance } from './axiosWithAuth'\nimport * as queryString from 'query-string'\n\nconst DOMAIN = 'topcoder-dev.com'\nconst DEV_API_HOSTNAME = `https://api.${DOMAIN}`\nconst PROJECT_API_URL = `${DEV_API_HOSTNAME}/v5/projects`\n\n/**\n * Api request for fetching member's projects\n * @returns {Promise<*>}\n */\nexport async function fetchMemberProjects (filters) {\n  const params = {\n    ...filters\n  }\n\n  const response = await axiosInstance.get(`${PROJECT_API_URL}?${queryString.stringify(params)}`)\n  return _.get(response, 'data')\n}\n\n/**\n * Api request for fetching project by id\n * @param id Project id\n * @returns {Promise<*>}\n */\nexport async function fetchProjectById (id) {\n  const response = await axiosInstance.get(`${PROJECT_API_URL}/${id}`)\n  return _.get(response, 'data')\n}\n","/**\n * Create view for showing the project list.\n */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { fetchMemberProjects } from '../services/projects'\nimport { formatDate } from '../utils/date-utils'\nimport { directUrl, connectUrl } from '../utils/url-utils'\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: false, label: 'Title' },\n  { id: 'status', numeric: false, disablePadding: false, label: 'Status' },\n  { id: 'lastActivityAt', numeric: false, disablePadding: false, label: 'Last Update' },\n  { id: 'directProjectId', numeric: false, disablePadding: false, label: 'Direct Project Id' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  name: {\n    width: 300\n  },\n  type: {\n    width: 100\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nfunction ProjectsTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [data, setData] = React.useState([]);\n\n  React.useEffect(() => {\n    const filters = {}\n    filters['sort'] = 'lastActivityAt desc'\n    filters['memberOnly'] = false\n\n    fetchMemberProjects(filters)\n      .then(projects => {\n        console.log(projects);\n        \n        setData(projects)\n      })\n      .catch((e) => {\n        console.error(e)\n    })\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size='medium'\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={data.length}\n            />\n            <TableBody>\n              {stableSort(data, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  return (\n                    <TableRow // eslint-disable-line react/jsx-key\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      tabIndex={-1}\n                      // key={row.name}\n                    >\n                      <TableCell align=\"left\" className={classes.name}>\n                        <a href={connectUrl(row.id)} target=\"_blank\">{row.name}</a> {/* eslint-disable-line react/jsx-no-target-blank */}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.status}</TableCell>\n                      <TableCell align=\"left\">{formatDate(row.lastActivityAt)}</TableCell>\n                      <TableCell align=\"left\">\n                        <a href={directUrl(row.directProjectId)} target=\"_blank\">{row.directProjectId}</a> {/* eslint-disable-line react/jsx-no-target-blank */}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nexport default ProjectsTable;","/**\n * Create view for showing the projects or challenges options.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ChallengeTab from './challenges-tab';\nimport ProjectsTable from './projects-table'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: 224,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n  tokenTextEdit: {\n    width: 500\n  }\n}));\n\nexport default function VerticalTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [token, setToken] = React.useState(\"\");\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  React.useEffect(() => {\n    // Get data service\n    VSS.getService(VSS.ServiceIds.ExtensionData).then(function(dataService) { // eslint-disable-line no-undef\n      // Get value in user scope\n      dataService.getValue(\"token\", {scopeType: \"User\"}).then(function(value) {\n        console.log(\"User scoped key value is \" + value);\n        setToken(value)\n      });\n    });\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n        <Tab label=\"Login\" {...a11yProps(0)} />\n        <Tab label=\"Projects\" {...a11yProps(1)} />\n        <Tab label=\"Challenges\" {...a11yProps(2)} />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <TextField id=\"filled-basic\" label=\"Token\" variant=\"filled\" className={classes.tokenTextEdit} value={token} onChange={\n          e => {\n            setToken(e.target.value)\n          }\n        }/>\n        <br/>\n        <br/>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => { \n          // Get data service\n          VSS.getService(VSS.ServiceIds.ExtensionData).then(function(dataService) { // eslint-disable-line no-undef\n            // Set value in user scope\n            dataService.setValue(\"token\", this.token, {scopeType: \"User\"}).then(function(value) {\n              console.log(\"Set User scoped key value is \" + value);\n            });\n          }.bind({token}));\n         }}>\n          Save\n        </Button>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <ProjectsTable />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <ChallengeTab />\n      </TabPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport ChallengesTable from './components/challenges-table';\n\n/**\n * Render UI for the widget feature\n */\nfunction Widget() {\n  return (\n    <div className=\"App\">\n      <ChallengesTable status=\"Active\"/>\n    </div>\n  );\n}\n\nexport default Widget;\n","import React from 'react';\nimport './App.css';\nimport MainTab from './components/main-tab';\nimport Widget from './Widget';\n\n/**\n * Main App React hooks function\n */\nfunction App() {\n\n  function useQuery() {\n    return new URLSearchParams(window.location.search);\n  }\n  \n  let query = useQuery();\n  console.log(query);\n  let context = query.get('context');\n  console.log(context);\n\n  if (context === 'widget') {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        </header>\n        <Widget />\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        </header>\n        <MainTab />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nVSS.init({\n  explicitNotifyLoaded: true\n});\n\nVSS.require(\"TFS/Dashboards/WidgetHelpers\", function (WidgetHelpers) {\n  VSS.register(\"tcx-widget\", function () {\n      return {\n          load: function (widgetSettings) {\n              return WidgetHelpers.WidgetStatusHelper.Success();\n          }\n      }\n  });\n\n  // Use an IIFE to create an object that satisfies the IContributedMenuSource contract\n  var menuContributionHandler = (function () {\n    \"use strict\";\n    return {\n        // This is a callback that gets invoked when a user clicks the newly contributed menu item\n        // The actionContext parameter contains context data surrounding the circumstances of this\n        // action getting invoked.\n        execute: function (actionContext) {\n            alert(\"Work item sent.\");\n        }\n    };\n  }());\n\n  // Associate the menuContributionHandler object with the \"myAction\" menu contribution from the manifest.\n  VSS.register(\"tcx-workitem-send\", menuContributionHandler);\n\n  VSS.notifyLoadSucceeded();\n});\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}